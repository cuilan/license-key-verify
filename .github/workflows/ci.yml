name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 测试
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置 Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: 缓存 Go 模块
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: 下载依赖
      run: make deps

    - name: 代码格式检查
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "以下文件需要格式化:"
          gofmt -s -l .
          exit 1
        fi

    - name: 运行测试
      run: make test

    - name: 生成测试覆盖率
      run: make test-coverage

    - name: 上传覆盖率报告
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  build:
    name: 构建
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置 Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: 缓存 Go 模块
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: 构建所有平台
      run: make build-all

    - name: 上传构建产物
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: dist/
        retention-days: 30 